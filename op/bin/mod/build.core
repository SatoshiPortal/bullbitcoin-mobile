#!/bin/bash

function main.build {
    if [ -z "$1" ]; then
        err.log "Error: Please provide a version (eg: v0.1.2)"
        exit 1
    fi
    version=$1
    v_zone_build=$BBM_OP_HOME/builds/$BBM.$version
    
    file_path="$BBM_HOME/lib/import/bloc/import_cubit.dart"

    if [[ -f $file_path ]]; then
        # Disable useTestWallet
        if grep -q "bool useTestWallet = true" $file_path; then
            echo "'bool useTestWallet = true'. Updating to 'false'."
            sed -i 's/bool useTestWallet = true/bool useTestWallet = false/' $file_path
            echo "The file has been updated."
        else
            echo "'bool useTestWallet' is already set to false."
        fi
    else
        echo "The file '$file_path' does not exist."
    fi
    # $SED_COMPAT "s/const bbVersion = '[^']*';/const bbVersion = '$version';/g" "$BBM_HOME/lib/locator.dart"
    # $SED_COMPAT "s/version: [^ ]*/version: $version/g" "$BBM_HOME/pubspec.yaml"
    # $SED_COMPAT "s/versionName \"[^\"]*\"/versionName \"$version\"/g" "$BBM_HOME/android/app/build.gradle"

    #------------------ build aab & apk
    cd "$BBM_HOME/lib" || exit 1;
    flutter build appbundle
    flutter build apk --release
    rm -rf "$v_zone_build"
    mkdir -p "$v_zone_build"
    #------------------ package aab
    release_path="$BBM_HOME/build/app/outputs/bundle/release"
    cd "$release_path" || exit 1;
    mkdir -p "$version"
    cp app-release.aab "$version/bullbitcoin-$version.aab"
    cd "$version" || exit 1;

    sign.build "$release_path/$version"

    mkdir -p "$v_zone_build/bundle"
    cp -r . "$v_zone_build/bundle"
    #------------------ package apk
    release_path="$BBM_HOME/build/app/outputs/flutter-apk"
    cd "$release_path" || exit 1;
    mkdir -p "$version"
    cp app-release.apk "$version/bullbitcoin-$version.apk"
    cd "$version" || exit 1;

    sign.build "$release_path/$version"

    cp -r . "$v_zone_build"
    #------------------ package build
    cd "$v_zone_build" && cd .. || exit
    zip -r "$v_zone_build.zip" "$BBM.$version"
    win.log "Built & Signed: $BBM.$version"
    #------------------ stop gradlew            

}   

function sign.build {
    realese_dir=$1
    cd "$realese_dir" || exit 1;
    find . -type f -not -name "*.SHA256*" -print0 | xargs -0 -I{} -P"$(nproc)" sha256sum -b "{}" >HASHSUMS.SHA256
    gpg --sign --detach-sign --armor HASHSUMS.SHA256
    gpg --verify HASHSUMS.SHA256.asc
    sha256sum --ignore-missing --check HASHSUMS.SHA256
}
