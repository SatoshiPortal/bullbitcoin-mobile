#!/bin/bash

# Color definitions
declare -A COLORS
COLORS=(
  [BLUE]='\033[0;34m'
  [GREEN]='\033[0;32m'
  [RED]='\033[0;31m'
  [YELLOW]='\033[0;33m'
  [CYAN]='\033[0;36m'
  [MAGENTA]='\033[0;35m'
  [NC]='\033[0m'  # No Color/Reset
)

# Text Styles
BOLD='\033[1m'
# UNDERLINE='\033[4m'
# INVERSE='\033[7m'

# Background Color
BG_WHITE='\033[47m'
BG_BLUE='\033[44m'
BG_RED='\033[41m'

function color.log {
    local color=$1
    local message="${*:2}"
    printf "%b%s%b\n" "${COLORS[$color]}" "$message" "${COLORS[NC]}"
}

function blue.log { color.log "BLUE" "$@"; }
function green.log { color.log "GREEN" "$@"; }
function red.log { color.log "RED" "$@"; }
function yellow.log { color.log "YELLOW" "$@"; }
function cyan.log { color.log "CYAN" "$@"; }
function magenta.log { color.log "MAGENTA" "$@"; }

function bg_red.log { printf "%b%s%b\n" "$BG_RED" "$1" "${COLORS[NC]}"; }

function bold.log { printf "%b%s%b\n" "$BOLD" "$1" "${COLORS[NC]}"; }

function br.log { printf "\n"; }
function br2.log { printf "\n\n"; }
function hr.log { printf "==========================\n"; }
function txt.log {
    if [ -z "$1" ]; then
        printf "txt.log - No text provided.\n"
    else
        printf "%s" "$1"
    fi
}

function input.log {
    if [ -z "$1" ]; then
        printf "input.log - No text provided.\n"
    else
        read -rp "%b[...] %s%b\n" "${COLORS[BLUE]}" "$1" "${COLORS[NC]}" user_input
        user_input=$(echo "$user_input" | tr -d '[:space:]' | tr -d '\r\n')
        echo "$user_input"
    fi
}

function notice.log { color.log "CYAN" "[!] $1"; }
function head.log { printf "%b[o] %s%b\n" "$BOLD" "$1" "${COLORS[NC]}"; }
function win.log { color.log "GREEN" "[*] $1"; }
function indent.log { printf "%b[+]  %s%b\n" "${COLORS[YELLOW]}" "$1" "${COLORS[NC]}"; }
function err.log { color.log "RED" "[x] $1"; }

function spinner.log() {
    local info="$1"
    local pid=$!
    local delay=0.1
    local spinstr='|/-\'
    while kill -0 $pid 2>/dev/null; do
        local temp=${spinstr#?}
        printf " [%c]  %s" "$spinstr" "$info"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
        for ((i=0; i<${#info}; i++)); do
            printf "\b"
        done
    done
    printf "    \b\b\b\b"
}

